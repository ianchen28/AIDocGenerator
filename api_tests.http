# AIDocGenerator API - Full End-to-End Test
#
# 使用方法:
# 1. 将光标放在每个请求块中 (以 "###" 分隔)。
# 2. 点击出现在请求上方的 "Send Request" 按钮。
# 3. 在右侧弹出的窗口中查看响应。
# 4. 这个文件会自动保存上一个请求的结果，并用于下一个请求 (例如 @job_id)。

# =================================================================
# 环境变量 (可选，但推荐)
# =================================================================
@baseUrl = http://127.0.0.1:8000/api/v1
@apiKey = my-secret-dev-key-a1b2c3d4
# 👆 请将 your_secret_key 替换成你的真实 API Key

###
# =================================================================
# 阶段一：作业创建与大纲生成
# =================================================================

### 1. 创建一个新的生成作业
# @name createJob
POST {{baseUrl}}/jobs
Content-Type: application/json
X-API-KEY: {{apiKey}}

{
  "context_id": null,
  "task_prompt": "分析“分治策略”在解决大型语言模型上下文长度限制问题中的应用、挑战与未来方向"
}

###
# 变量提取: 下面这行会自动从上面的响应中提取 job_id
@job_id = {{createJob.response.body.job_id}}

###
# -----------------------------------------------------------------
### 2. 触发大纲生成
POST {{baseUrl}}/jobs/{{job_id}}/outline
X-API-KEY: {{apiKey}}

###
# !!! 请手动等待几秒钟，让 Celery Worker 开始处理任务 !!!
# -----------------------------------------------------------------

### 3. 获取大纲 (轮询直到 status 为 READY)
# @name getOutline
GET {{baseUrl}}/jobs/{{job_id}}/outline
X-API-KEY: {{apiKey}}

###
# !!! 如果上一步的 outline_status 还是 GENERATING，请再次点击上面的 "Send Request" !!!
# 当 status 变为 READY 后，请手动复制右侧响应中的整个 outline JSON 对象。
# -----------------------------------------------------------------

### 4. 提交大纲并开始最终生成
# @name startFinalGeneration
PUT {{baseUrl}}/jobs/{{job_id}}/outline
Content-Type: application/json
X-API-KEY: {{apiKey}}

# vvvvvvvvvvvv 在这里粘贴你上一步获取到的大纲内容 vvvvvvvvvvvv
{
    "outline": {
    "title": "关于'分析“分治策略”在解决大型语言模型上下文长度限制问题中的应用...'的文档",
    "nodes": [
      {
        "id": "node_1",
        "title": "概述与背景",
        "content_summary": "介绍分析“分治策略”在解决大型语言模型上下文的基本概念和重要性",
        "children": []
      },
      {
        "id": "node_2",
        "title": "核心内容分析",
        "content_summary": "深入分析分析“分治策略”在解决大型语言模型上下文的关键要素",
        "children": []
      },
      {
        "id": "node_3",
        "title": "应用与实践",
        "content_summary": "探讨分析“分治策略”在解决大型语言模型上下文的实际应用场景",
        "children": []
      }
    ]
  }
}
# ^^^^^^^^^^^^ 在这里粘贴你上一步获取到的大纲内容 ^^^^^^^^^^^^

###
# !!! 最终生成任务已触发，现在可以监听下面的流了 !!!
# =================================================================
# 阶段二：观察实时流
# =================================================================

### 5. 【核心】监听实时事件流
# REST Client 会自动处理 SSE，在右侧窗口持续显示新事件
GET {{baseUrl}}/jobs/{{job_id}}/events
X-API-KEY: {{apiKey}}

###

### 6. 【核心】监听文档内容流
# 你可以打开第二个编辑器窗口，并排查看两个流
GET {{baseUrl}}/jobs/{{job_id}}/document/stream
X-API-KEY: {{apiKey}}

###
# =================================================================
# 阶段三：获取最终结果
# =================================================================

### 7. 获取最终生成的文档
# 等待工作流完成后，获取完整的文档内容和统计信息
GET {{baseUrl}}/jobs/{{job_id}}/document
X-API-KEY: {{apiKey}}