# AI文档生成器API - 新file_token功能测试
# 使用方法: 在VS Code中安装REST Client扩展，然后点击每个请求上方的"Send Request"

# =================================================================
# 环境变量
# =================================================================
@baseUrl = http://127.0.0.1:8000/api/v1

###
# =================================================================
# 1. 健康检查
# =================================================================
GET {{baseUrl}}/health
Content-Type: application/json

###
# =================================================================
# 2. 大纲生成端点测试 (新功能：返回file_token)
# =================================================================
# @name outlineGeneration
POST {{baseUrl}}/jobs/outline
Content-Type: application/json

{
  "sessionId": "test_session_001",
  "taskPrompt": "请生成一份关于人工智能技术发展趋势的详细大纲，包含机器学习、深度学习和应用场景等内容",
  "isOnline": true,
  "contextFiles": [],
  "styleGuideContent": "请使用专业的技术文档风格",
  "requirements": "需要包含实际案例和未来发展趋势"
}

###
# 变量提取: 从大纲生成响应中提取taskId
@taskId = {{outlineGeneration.response.body.redisStreamKey}}

###
# =================================================================
# 3. 等待大纲生成完成
# =================================================================
# 注意: 大纲生成是异步的，需要等待几秒钟
# 可以使用Redis命令监听进度: redis-cli XREAD COUNT 10 STREAMS {{taskId}} 0

###
# =================================================================
# 4. 文档生成端点测试 (使用file_token)
# =================================================================
# 注意: 这里使用示例file_token，实际使用时需要从大纲生成的Redis流中获取
POST {{baseUrl}}/jobs/document-from-outline
Content-Type: application/json

{
  "taskPrompt": "基于大纲生成一份详细的技术文档",
  "sessionId": "test_session_001",
  "outline": "8b7e75b4150cde04bffba318da25068e",
  "contextFiles": [],
  "isOnline": true
}

###
# =================================================================
# 5. 带context_files的文档生成测试
# =================================================================
POST {{baseUrl}}/jobs/document-from-outline
Content-Type: application/json

{
  "taskPrompt": "基于大纲和提供的参考资料生成技术文档",
  "sessionId": "test_session_002",
  "outline": "8b7e75b4150cde04bffba318da25068e",
  "contextFiles": [
    {
      "attachmentFileToken": "example_file_token_001",
      "attachmentType": 1
    },
    {
      "attachmentFileToken": "example_file_token_002",
      "attachmentType": 2
    }
  ],
  "isOnline": false
}

###
# =================================================================
# 6. 模拟文档生成端点测试 (使用file_token)
# =================================================================
# @name mockGeneration
POST {{baseUrl}}/jobs/document-from-outline-mock
Content-Type: application/json

{
  "taskPrompt": "模拟生成技术文档",
  "sessionId": "mock_session_001",
  "outline": "8b7e75b4150cde04bffba318da25068e",
  "contextFiles": [],
  "isOnline": false
}

###
# 变量提取: 从模拟生成响应中提取taskId
@mockTaskId = {{mockGeneration.response.body.redisStreamKey}}

###
# =================================================================
# 7. 错误情况测试
# =================================================================

### 7.1 测试无效的file_token
POST {{baseUrl}}/jobs/document-from-outline
Content-Type: application/json

{
  "taskPrompt": "测试无效token",
  "sessionId": "error_test_001",
  "outline": "invalid_file_token_123",
  "contextFiles": [],
  "isOnline": false
}

### 7.2 测试缺少必需参数
POST {{baseUrl}}/jobs/document-from-outline
Content-Type: application/json

{
  "sessionId": "error_test_002",
  "outline": "8b7e75b4150cde04bffba318da25068e"
}

###
# =================================================================
# 8. AI文本编辑端点测试
# =================================================================

### 8.1 润色文本
POST {{baseUrl}}/actions/edit
Content-Type: application/json

{
  "action": "polish",
  "text": "人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器。",
  "polishStyle": "professional"
}

### 8.2 扩写文本
POST {{baseUrl}}/actions/edit
Content-Type: application/json

{
  "action": "expand",
  "text": "人工智能技术正在快速发展。"
}

### 8.3 总结文本
POST {{baseUrl}}/actions/edit
Content-Type: application/json

{
  "action": "summarize",
  "text": "人工智能（Artificial Intelligence，AI）是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器。该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。"
}

###
# =================================================================
# 使用说明
# =================================================================
# 
# 新功能特点:
# 1. 大纲生成完成后会返回file_token，存储在Redis流中
# 2. 文档生成时使用file_token而不是直接的大纲JSON
# 3. 支持context_files的file_token处理
# 4. 自动从远程storage下载和解析文件
#
# Redis流监听命令:
# - 监听实时事件: redis-cli XREAD COUNT 10 STREAMS <task_id> 0
# - 查看历史事件: redis-cli XRANGE <task_id> - +
# - 查看流长度: redis-cli XLEN <task_id>
#
# 测试流程:
# 1. 先执行大纲生成请求
# 2. 等待几秒钟让大纲生成完成
# 3. 使用Redis命令获取file_token
# 4. 使用file_token执行文档生成请求
# 5. 监听Redis流查看生成进度
